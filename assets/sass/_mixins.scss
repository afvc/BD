    /*------------------------------------*\
  #BREAKPOINTS
\*------------------------------------*/
   
 /// Mixin to manage responsive breakpoints
/// @author Hugo Giraudel
/// @param {String} $breakpoint - Breakpoint name
/// @require $breakpoints

@mixin respond-to($breakpoint) {
    
    
  // If the key exists in the map
  @if map-has-key($breakpoints, $breakpoint) {
    // Prints a media query based on the value
    @media (min-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  }
 
  // If the key doesn't exist in the map
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Available breakpoints are: #{map-keys($breakpoints)}.";
  }
}


/* ---------------#text_size--------------*/

/// Map deep get
/// @author Hugo Giraudel
/// @access public
/// @param {Map} $map - Map
/// @param {Arglist} $keys - Key chain
/// @return {*} - Desired value
@function map-deep-get($map, $keys...) {
    @each $key in $keys {
        $map: map-get($map, $key);
    }
    @return $map;
}

$typescale:( heading1: ( xs: 2.7rem, sm: 2.9rem, md: 3.1rem, lg: 3.3rem), medium1: ( xs: 1.5rem, sm: 1.6rem, md: 1.4rem, lg: 2.5rem), sub1: ( xs: 1rem, sm: 1.05rem, md: 1.1rem, lg: 1.2rem, xl: 1.5rem), text1: ( xs: 0.8rem, sm: 0.9rem, md: 0.9rem, lg: 1.02rem, xl:1.1rem), smalltext1: ( xs: 0.82rem, sm: 0.85rem, md: 0.87rem, lg: 0.88rem, xl:0.1rem), );

